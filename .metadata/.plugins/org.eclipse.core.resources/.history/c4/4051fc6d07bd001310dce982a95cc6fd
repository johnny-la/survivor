package com.jonathan.survivor.renderers;

import com.badlogic.gdx.graphics.OrthographicCamera;
import com.badlogic.gdx.graphics.g2d.Sprite;
import com.badlogic.gdx.graphics.g2d.SpriteBatch;
import com.jonathan.survivor.World;
import com.jonathan.survivor.entity.Background;
import com.jonathan.survivor.entity.Player;

/*
 * Renders the game's FX displayed on screen, such as the crosshairs.
 */

public class BackgroundRenderer 
{
	/** Stores the world, whose methods we call when certain animations are finished. */
	private World world;
	/** Stores the SpriteBatcher used to draw the Spine animations. */
	private SpriteBatch batcher;	
	
	/** Stores the OrthographicCamera where the Spine animations are drawn. */
	private OrthographicCamera worldCamera;
	
	/** Holds the Background instance which is drawn to the screen. */
	private Background background;
	
	/** Accepts the world from which we find the player which is needed to update the background, the SpriteBatch used to draw the background, and the world camera
	 *  where the background tiles are rendered. */
	public BackgroundRenderer(World world, SpriteBatch batcher, OrthographicCamera worldCamera)
	{
		//Stores the given contructor arguments in their respective member variables.
		this.world = world;
		this.batcher = batcher;
		this.worldCamera = worldCamera;
		
		//Creates the Background instance which is drawn to the screen. Accepts the center position of the Background, which is chosen to be the position of the player.
		background = new Background(world.getPlayer().getX(), world.getPlayer().getY());
	}
	
	/** Called every frame to render the Background to the screen. */
	public void render(float deltaTime)
	{		
		//Updates the background according to the player's position.
		update(deltaTime);
		//Draws the Background to the screen.
		draw(deltaTime);
	}

	/** Updates the Background so that it is always centered on the player. */
	private void update(float deltaTime) 
	{
		//Stores the player in the world, whose position in the world dictates where the background's tiles should be placed.
		Player player = world.getPlayer();
		
		//Gets the center-most tile.
		Sprite centerTile = background.getCenterTile();
		
		//If the player is to the right of the background's center tile
		if(player.getX() > centerTile.getY() + Background.TILE_WIDTH)
		{
			//Shift the tiles of the background to the right, so that the background follows the player's position.
			background.shiftRight();
		}
		//Else, if the player is to the left of the center-most tile
		else if(player.getX() < centerTile.getX())
		{
			//Shift the background's tiles to the left, so that the background follows the player's position.
			background.shiftLeft();
		}
		//Else, if the player above the background's center-most tile
		else if(player.getY() > centerTile.getY() + Background.TILE_HEIGHT)
		{
			//Shift the background's tiles up, so that the background follows the player's position.
			background.shiftUp();
		}
		//Else, if the player below the background's center-most tile
		else if(player.getY() < centerTile.getY())
		{
			//Shift the background's tiles down, so that the background follows the player's position.
			background.shiftLeft();
		}
	}
	
	/** Draws the Background instance on-screen. */
	private void draw(float deltaTime) 
	{
		//Gets the tile sprites which represent the background.
		Sprite[][] tiles = background.getTiles();
		
		//Cycles through each tile and renders it to the world camera.
		for(int i = 0; i < tiles.length; i++)
		{
			for(int j = 0; j < tiles[i].length; j++)
			{
				//Draws the tile sprite using the SpriteBatch instance stored as a member variable of this class.
				tiles[i][j].draw(batcher);
			}
		}
	}
	
}
