package com.jonathan.survivor.renderers;

import com.badlogic.gdx.graphics.Color;
import com.badlogic.gdx.graphics.g2d.SpriteBatch;
import com.badlogic.gdx.utils.Array;
import com.esotericsoftware.spine.Event;
import com.jonathan.survivor.Assets;
import com.jonathan.survivor.entity.ItemObject;

public class ItemObjectRenderer 
{
	/** Stores the SpriteBatch instance used to display the ItemObject. */
	private SpriteBatch batcher;
	
	/** Stores the Assets singleton which stores all of the visual assets needed to draw the interactive GameObjects. */
	private Assets assets = Assets.instance;
	
	/** Stores the color of transparent GameObjects. */
	private static final Color TRANSPARENT_COLOR = new Color(0, 0, 0, 0.4f);
	
	/** Helper Color instance used to color GameObjects and avoid creating new color instances. */
	private Color workingColor;
	
	//Helper Array that's passed to the Animation.set() method.
	private Array<Event> events = new Array<Event>();
	
	/** Accepts the SpriteBatch instance used to render the ItemObjects passed to render(). */
	public ItemObjectRenderer(SpriteBatch batcher)
	{
		//Stores the arguments in their respective member variables.
		this.batcher = batcher;
		
		//Instantiates the helper Color object used to color the ItemObjects.
		workingColor = new Color(Color.WHITE);
	}
	
	/** Accepts the ItemObject to draw, and whether or not to draw it transparent. */
	public void draw(ItemObject itemObject, boolean transparent)
	{
		//Stores the Skeleton instance owned by the ItemObject, which allows the object to be drawn to the screen.
		
		//If the ItemObject is supposed to be drawn transparent
		if(transparent)
			//Multiply the working color by the TRANSPARENT_COLOR constant so that the ItemObject is drawn transparent.
			workingColor.mul(TRANSPARENT_COLOR);
	}
}
