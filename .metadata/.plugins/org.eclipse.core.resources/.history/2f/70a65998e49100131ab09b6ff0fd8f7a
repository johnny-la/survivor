package com.jonathan.survivor.hud;

import com.badlogic.gdx.scenes.scene2d.Stage;
import com.badlogic.gdx.scenes.scene2d.ui.Button;
import com.badlogic.gdx.scenes.scene2d.ui.Image;
import com.badlogic.gdx.scenes.scene2d.ui.Label;
import com.badlogic.gdx.scenes.scene2d.ui.List;
import com.badlogic.gdx.scenes.scene2d.ui.Table;
import com.jonathan.survivor.World;

public class SurvivalGuideHud extends Hud
{
	/** Stores the offset used to anchor the back button to the bottom-right of the screen with a certain padding. */
	public static final float BACK_BUTTON_X_OFFSET = 10;
	public static final float BACK_BUTTON_Y_OFFSET = 5;
	
	
	/** Stores the image of the backpack background. */
	private Image backpackBg;
	
	/** Stores the header displaying "Survival Guide" on top of the Hud. */
	private Label survivalGuideHeader;
	
	/** Stores the list prompting the user to select an item to view in the survival guide. */
	private List list;
	
	/** Holds the list of entries that the user can choose from the list. */
	private String[] entries = new String[]{"How to Escape", "How to Eat", "How to defend yourself"}; 
	
	/** Stores the back button, used to exit out of the backpack hud. */
	private Button backButton;
	
	/** Stores the Table instance where buttons are organized in a grid-like fashion. */
	private Table table;
	
	/** Accepts the stage where widgets are placed. The passed world is unused for this HUD. */
	public SurvivalGuideHud(Stage stage, World world)
	{
		super(stage, world);
		
		//Creates the image displaying the backpack background. Uses the pre-defined TextureRegion displaying the background.
		backpackBg = new Image(assets.backpackBgRegion);
		//Re-scales the background so that it takes the same space on the screen no matter the atlas size chosen.
		backpackBg.setSize(backpackBg.getWidth() / assets.scaleFactor, backpackBg.getHeight() / assets.scaleFactor);
		
		//Creates a new header for the backpack using the pre-defined header's label style.
		survivalGuideHeader = new Label("Survival Guide", assets.hudHeaderStyle);
		
		//Creates the list displaying all the entries in the survival guide.
		list = new List(entries, assets.mainMenuListStyle);
		
		//Creates the back button using the designated ButtonStyle, which dictates its appearance.
		backButton = new Button(assets.backButtonStyle);
		//Resizes the back button so that, no matter the size of the atlas chosen, the button will occupy the same space in gui coordinates.
		backButton.setSize(backButton.getWidth() / assets.scaleFactor, backButton.getHeight() / assets.scaleFactor);
		
		//Creates a new Table instance to neatly arrange the buttons on the hud.
		table = new Table();
		
		table.add(survivalGuideHeader).row();
		//Adds the list of survival guide entries to the table.
		table.add(list);
		
		//Adds the table to the stage so that its widgets are drawn to the screen.
		stage.addActor(table);
		
	}

	/** Called either when this pause menu is supposed to be displayed, or when the screen is resized. Parameters indicate the size that the HUD should occupy. */
	@Override
	public void reset(float guiWidth, float guiHeight) 
	{
		//Clear the current contents of the stage to erase the previously-displayed Hud and make way for the pause menu's widgets.
		stage.clear();
		
		//Resizes the table so that it occupies the entire size of the gui to thus occupy the entire stage.
				table.setBounds(0, 0, guiWidth, guiHeight);
		
		//Centers the backpack background to the stage. Note that the position is the bottom-left of backpackBg's image.
		backpackBg.setPosition(stage.getWidth()/2 - backpackBg.getWidth()/2, stage.getHeight()/2 - backpackBg.getHeight()/2);
		//Anchors the back button to the bottom-right of the backpack background, using the given offsets. Note that button positions are the bottom-left of the buttons.
		backButton.setPosition(backpackBg.getX() + backpackBg.getWidth() - backButton.getWidth() - BACK_BUTTON_X_OFFSET, backpackBg.getY() + BACK_BUTTON_Y_OFFSET);
		
		//Adds the backpack background to the center of the stage.
		stage.addActor(backpackBg);
		//Adds the back button to the stage.
		stage.addActor(backButton);
		
	}
}
